const MergeSort = () => {
  const arr = [2, 5, 3, 7, 4, 9, 1];
  const devide = (array) => {
    if (array.length <= 1) return array;
    let mid = Math.ceil(array.length / 2);
    let leftArray = array.slice(0, mid);
    let rightArray = array.slice(mid);

    return merge(devide(leftArray), devide(rightArray));
  };

  const merge = (leftArray, rightArray) => {
    const sortedArr = [];

    while (leftArray.length > 0 && rightArray.length > 0) {
      if (leftArray[0] <= rightArray[0]) {
        sortedArr.push(leftArray.shift());
      } else {
        sortedArr.push(rightArray.shift());
      }
    }
    return [...sortedArr, ...leftArray, ...rightArray];
  };

  const sortedArray = devide(arr);
  console.log(devide(arr));
  console.log(sortedArray);
};

export default MergeSort;
