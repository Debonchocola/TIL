- 선형 검색 : 무작위의 데이터 집합에서 검색을 수행
- 이진 검색 : 일정한 규칙으로 늘어놓은 데이터 집합에서 빠른 검색 수행
- 해시 법 : 추가 삭제가 자주 일어나는 데이터 집합에서 빠른 검색 수행
  - 체인법: 같은 해시값 데이터를 연결 리스트로 연결하는 방법
  - 오픈 주소법: 데이터를 위한 해시값이 충돌할 때 재해시하는 방법
  용도, 목적, 실행 속도, 자료구조 등 여러 사항을 고려해서 선택해야 합니다.
  
  선형 검색
  -ex) for (let i = 0; i < a.length; i++) {
          if(a[i] === key) return i;  (검색 성공)
          return -1;  (검색 실패)
      }
      
  -ex) (파이썬)
  from ssearch_while import seq_search
  
  t = (4, 7, 5.6, 2, 3.14, 1)
  s = 'string'
  a = ['DTS', 'AAC', 'FLAC']
  
  print(f'{t}에서 5.6의 인덱스는 {seq_search(t, 5.6)}입니다.' )
  print(f'{s}에서 "n"의 인덱스는 {seq_search(s, "n")}입니다.' )
  print(f'{a}에서 "DTS"의 인덱스는 {seq_search(a, "DTS")}입니다.' )
  
  실행 결과
  (4, 7, 5.6, 2, 3.14, 1)에서 5.6의 인덱스는 2입니다.
  string에서 "n"의 인덱스는 4입니다.
  ['DTS', 'AAC', 'FLAC']에서 "DTS" 의 인덱스는 0입니다.
  
