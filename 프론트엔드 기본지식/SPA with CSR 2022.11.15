CSR에서의 브라우저 렌더링

1) 브라우저에서 서버로 웹 페이지를 조회하고 싶다는 요청을 보낸다.

2) 서버는 브라우저로부터 날아온 요청 경로를 확인(`/`)하고 `index.html` 을 서버 내 자원으로부터 찾아 응답으로 돌려준다. 이 때 index.html의 body 태그 내부는 비어있는 상태다.

3) 브라우저는 HTML 파일에서 **head 태그를 읽으며 추가로 필요한 자원(`index.js`, `index.css` 등)을 서버로 다시 요청**한다.

4) 엔트리 역할을 하는 자바스크립트 파일이 다운로드 → 로딩 → 실행되고, 자바스크립트 앱은 미리 프로그래밍 된 로직에 따라 DOM API를 활용해 화면에 태그들을 그려넣는다.

5) 초기 로딩 이외의 변경이 필요할 때는 서버 API에 요청하여 받아온 데이터로 새롭게 갈아 끼운다.

6)SPA / CSR 상황에서 페이지 이동(라우팅)**이 필요할 때는 아래와 같은 절차를 거친다.

- 브라우저 경로를 변경하면 트리거 되는 기본 HTTP GET 요청은 막되
- 브라우저 주소는 변경된 상태를 유지하도록 한 다음
- 변경을 감지하여 DOM API가 다른 페이지에 알맞은 화면을 그리도록한다

정리하자면 SPA 방식으로 CSR을 구현한 웹 서비스는

- 최초 통신을 할 때 화면 그리기에 필요한 모든 재료들을 브라우저에 가져다놓고
- 그려야 하는 화면에 맞춰 재료를 알맞게 조립하는 방식이며
- 추가로 필요한 재료들은 필요한 시점에, 필요한 만큼만 서버에서 받아옵니다

이렇게 구현했을 경우 페이지 전환이 부드러우며, 기존 방식에 비해 훨씬 동적이고 유려한 UX를 보여줄 수 있습니다.

