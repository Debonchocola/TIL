전체 셀렉터
* {color: red;}

태그 셀렉터
h1 {color: red;}
<h1>Heading</h1>

id 셀렉터
#p1 {color: red;}
<p id="p1">paragraph 1</p>

class 셀렉터
.container {font-size: 16px}
.point {color: red}
<div className="container point">paragraph</div>

여러개 사용 가능

h1[title ~= first] {color: red} 포함된 요소에 적용

<body>
  <h1 title="heading first">Heading first</h1> => 적용
  <h1 title="heading third">Heading third</h1>
</body>

a[href^="https://"] { color: red; } 시작하는 요소에 적용

<body>
  <a href="https://www.test.com">https://www.test.com</a><br> => 적용
  <a href="http://www.test.com">http://www.test.com</a>
</body>

a[href$=".html"] { color: red; } 끝나는 요소에 적용

<body>
  <a href="test.html">test.html</a><br>
  <a href="test.jsp">test.jsp</a>
</body>

div[class*="test"] { color: red; } 포함하는 요소 적용

<body>
  <div class="first_test">The first div element.</div> => 적용
  <div class="test">The third div element.</div> => 적용
</body>

p + ul { color: red; } 인접 형제 셀렉터 (바로 뒤의 요소를 선택)

<ul>
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ul>

<p>The first paragraph.</p>

<ul> ==> 적용
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ul>

 p ~ ul { color: red; } 뒤에 있는 해당 값 형제 셀렉터 모두

<ul>
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ul>

<p>The first paragraph.</p>
<ul> ==> 적용
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ul>

<h2>Another list</h2>
<ul> ==> 적용
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ul>

링크 셀렉터
a:link {color: orange} => 방문하지 않은 링크일 떄
a:visited {color: green} => 방문한 링크일 때

  /* ol 요소의 자식 요소인 li 요소 중에서 짝수번째 요소만을 선택 */
    ol > li:nth-child(2n)   { color: orange; }
    /* ol 요소의 자식 요소인 li 요소 중에서 홀수번째 요소만을 선택 */
    ol > li:nth-child(2n+1) { color: green; }

    /* ol 요소의 자식 요소인 li 요소 중에서 첫번쨰 요소만을 선택 */
    ol > li:first-child     { color: red; }
    /* ol 요소의 자식 요소인 li 요소 중에서 마지막 요소만을 선택 */
    ol > li:last-child      { color: blue; }

/* input 요소 중에서 type 어트리뷰트의 값이 password가 아닌 요소를 선택 */
  input:not([type=password]) {
    background: yellow;
  }

::first-letter 콘텐츠의 첫글자를 선택한다.
::first-line   콘텐츠의 첫줄을 선택한다. 블록 요소에만 적용할 수 있다.
::after        콘텐츠의 뒤에 위치하는 공간을 선택한다. 일반적으로 content 프로퍼티와 함께 사용된다.
::before       콘텐츠의 앞에 위치하는 공간을 선택한다. 일반적으로 content 프로퍼티와 함께 사용된다.
::selection    드래그한 콘텐츠를 선택한다. iOS Safari 등 일부 브라우저에서 동작 않는다.

em vs rem 차이점
em은 상속을 받아서 상대적
rem은 최상위 요소의 사이즈를 기준으로
