MPA(Multi Page Application)
 웹 페이지 화면마다, 정적 파일 htm로 보여주는 애플리케이션
 클라이언트가 서버에 페이지를 요청하면, 클라이언트에게 HTML만 넘겨줌
 
장점
  페이지마다 키워드가 노출되어 있으므로, 검색이 쉽다

단점
  프로트 엔드와 백엔드 간 개발 업무가 밀접하게 연관된다.
  
SPA(Single Page Application)
  페이지를 변경하지 않고, 자바스크립트만을 이용하여 콘텐츠만 변경하여 웹페이지를 보여주는 애플리케이션
  AJAX(Asynchronous JavaScript and XML)와 REST API로 서버에 데이터를 요청하고, JSON으로 응답받은 후 데이터를 변경함
   
장점
  서버가 해야 할 역할을 클라이언트 부담하므로, 서버 부담이 경감
  모듈화 및 컴포넌트 개발에 용이
  백엔드와 프론트 개발 영역을 명확하게 구분

단점
  초기 구동 속도가 느림 (처음 접속 시, 사이트 구성과 관련 없는 모든 리소스를 한 번에 다 받음)
  클라이언트에 중요 비즈니스 로직이 노출될 수 있음
  검색 엔진 최적화(Search Engine Optimization)가 어려움 => 페이지가 로딩되어야 리소스가 보이므로, 검색에 노출이 안됨
  
MPA vs SPA 차이점

  웹 페이지의 내용이 동적으로 변하면 SPA, 웹사이트가 모두 문서로 작성되어있다면 MPA
  SPA는 서버로부터 필요한 정보만 받으면 되지만, MPA는 매번 서버로부터 문서에 대한 모든 데이터를 다 받아야 함
  
웹 사이트를 제작하려는 목적에 따라, 단순 정보 제공인지 혹은 마케팅, 쇼핑용인지 목적에 따라 웹 사이트를 어떤 방식으로 구성할지 전략을 세우면, 사이트 운영목적을 달성하실 수 있다.
